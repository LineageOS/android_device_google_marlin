# socket ioctls
define(`RMNET_IOCTL_SET_LLP_ETHERNET', `0x000089F1')
define(`RMNET_IOCTL_EXTENDED', `0x000089FD')

# gpu_device ioctls defined in the kernel in include/uapi/linux/msm_kgsl.h
define(`IOCTL_KGSL_DEVICE_GETPROPERTY', `0x00000902')
define(`IOCTL_KGSL_DEVICE_WAITTIMESTAMP', `0x00000906')
define(`IOCTL_KGSL_DEVICE_WAITTIMESTAMP_CTXTID', `0x00000907')
define(`IOCTL_KGSL_RINGBUFFER_ISSUEIBCMDS', `0x00000910')
define(`IOCTL_KGSL_CMDSTREAM_READTIMESTAMP', `0x00000911')
define(`IOCTL_KGSL_CMDSTREAM_FREEMEMONTIMESTAMP', `0x00000912')
define(`IOCTL_KGSL_DRAWCTXT_CREATE', `0x00000913')
define(`IOCTL_KGSL_DRAWCTXT_DESTROY', `0x00000914')
define(`IOCTL_KGSL_MAP_USER_MEM', `0x00000915')
define(`IOCTL_KGSL_CMDSTREAM_READTIMESTAMP_CTXTID', `0x00000916')
define(`IOCTL_KGSL_CMDSTREAM_FREEMEMONTIMESTAMP_CTXTID', `0x00000917')
define(`IOCTL_KGSL_SHAREDMEM_FROM_PMEM', `0x00000920')
define(`IOCTL_KGSL_SHAREDMEM_FREE', `0x00000921')
define(`IOCTL_KGSL_DRAWCTXT_BIND_GMEM_SHADOW', `0x00000922')
define(`IOCTL_KGSL_SHAREDMEM_FROM_VMALLOC', `0x00000923')
define(`IOCTL_KGSL_SHAREDMEM_FLUSH_CACHE', `0x00000924')
define(`IOCTL_KGSL_DRAWCTXT_SET_BIN_BASE_OFFSET', `0x00000925')
define(`IOCTL_KGSL_CMDWINDOW_WRITE', `0x0000092e')
define(`IOCTL_KGSL_GPUMEM_ALLOC', `0x0000092f')
define(`IOCTL_KGSL_CFF_SYNCMEM', `0x00000930')
define(`IOCTL_KGSL_CFF_USER_EVENT', `0x00000931')
define(`IOCTL_KGSL_SETPROPERTY', `0x00000932')
define(`IOCTL_KGSL_TIMESTAMP_EVENT', `0x00000933')
define(`IOCTL_KGSL_GPUMEM_ALLOC_ID', `0x00000934')
define(`IOCTL_KGSL_GPUMEM_FREE_ID', `0x00000935')
define(`IOCTL_KGSL_GPUMEM_GET_INFO', `0x00000936')
define(`IOCTL_KGSL_GPUMEM_SYNC_CACHE', `0x00000937')
define(`IOCTL_KGSL_PERFCOUNTER_GET', `0x00000938')
define(`IOCTL_KGSL_PERFCOUNTER_PUT', `0x00000939')
define(`IOCTL_KGSL_PERFCOUNTER_QUERY', `0x0000093a')
define(`IOCTL_KGSL_PERFCOUNTER_READ', `0x0000093b')
define(`IOCTL_KGSL_GPUMEM_SYNC_CACHE_BULK', `0x0000093c')
define(`IOCTL_KGSL_SUBMIT_COMMANDS', `0x0000093d')
define(`IOCTL_KGSL_SYNCSOURCE_CREATE', `0x00000940')
define(`IOCTL_KGSL_SYNCSOURCE_DESTROY', `0x00000941')
define(`IOCTL_KGSL_SYNCSOURCE_CREATE_FENCE', `0x00000942')
define(`IOCTL_KGSL_SYNCSOURCE_SIGNAL_FENCE', `0x00000943')
define(`IOCTL_KGSL_CFF_SYNC_GPUOBJ', `0x00000944')
define(`IOCTL_KGSL_GPUOBJ_ALLOC', `0x00000945')
define(`IOCTL_KGSL_GPUOBJ_FREE', `0x00000946')
define(`IOCTL_KGSL_GPUOBJ_INFO', `0x00000947')
define(`IOCTL_KGSL_GPUOBJ_IMPORT', `0x00000948')
define(`IOCTL_KGSL_GPUOBJ_SYNC', `0x00000949')
define(`IOCTL_KGSL_GPU_COMMAND', `0x0000094a')
define(`IOCTL_KGSL_PREEMPTIONCOUNTER_QUERY', `0x0000094b')
define(`IOCTL_KGSL_GPUOBJ_SET_INFO', `0x0000094c')

# socket ioctls defined in the kernel in include/uapi/linux/msm_ipc.h
define(`IPC_ROUTER_IOCTL_GET_VERSION', `0x0000c300')
define(`IPC_ROUTER_IOCTL_GET_MTU', `0x0000c301')
define(`IPC_ROUTER_IOCTL_LOOKUP_SERVER', `0x0000c302')
define(`IPC_ROUTER_IOCTL_GET_CURR_PKT_SIZE', `0x0000c303')
define(`IPC_ROUTER_IOCTL_BIND_CONTROL_PORT', `0x0000c304')
define(`IPC_ROUTER_IOCTL_CONFIG_SEC_RULES', `0x0000c305')
